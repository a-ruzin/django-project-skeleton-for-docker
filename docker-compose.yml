services:
  db: # -----------------------------------------------------------------------
    image: postgres:13.3-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./deploy/data/backup/db:/var/lib/backup/data
      - ./db/bin:/var/lib/backup/bin
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  nginx: # --------------------------------------------------------------------
    build:
      context: nginx
      dockerfile: Dockerfile
      args:
        PROJECT_DOMAIN: ${PROJECT_DOMAIN}
        PROJECT_PORT: ${PROJECT_PORT}
    depends_on:
      - app
      - static
    ports:
      - "${PROJECT_IP:-0.0.0.0}:${PROJECT_PORT_HTTP}:80"
      - "${PROJECT_IP:-0.0.0.0}:${PROJECT_PORT_SSL}:443"
    environment:
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PROJECT_PORT=${PROJECT_PORT}
    volumes:
       - nginx-config:/etc/nginx/conf.d
       - nginx-certificates:/etc/letsencrypt

  app: # ------------------------------------------------------------------
    build:
      context: app
      dockerfile: Dockerfile
    depends_on:
      - db
    env_file:
      - ./.env
    volumes:
      - ./deploy/logs/app:/app/logs
      - http-media:/app/media
      - http-static:/app/static

  static: # -------------------------------------------------------------------
    build:
      context: app-static
      dockerfile: Dockerfile
    volumes:
       - http-media:/www/media
       - http-static:/www/static

  rabbit:
    image: rabbitmq:3.12.0-management-alpine
    env_file:
      - ./.env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 3

  celery_worker:
    build:
      context: app
    command: celery -A core worker -l INFO
    restart: always
    depends_on:
      app:
        condition: service_started
      rabbit:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - ./.env
    volumes:
      - ./deploy/logs/app:/app/logs
      - http-media:/app/media
      - http-static:/app/static

  celery_beat:
    build:
      context: app
    command: celery -A core beat -l INFO
    restart: always
    depends_on:
      app:
        condition: service_started
      celery_worker:
        condition: service_started
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - ./.env
    volumes:
      - ./deploy/logs/app:/app/logs
      - http-media:/app/media
      - http-static:/app/static

  celery_flower:
    build:
      context: app
    command: celery -A core flower
    restart: always
    depends_on:
      app:
        condition: service_started
      celery_worker:
        condition: service_started
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - ./.env
    volumes:
      - ./deploy/logs/app:/app/logs

volumes:
  db-data:
  http-media:
  http-static:
  nginx-config:
  nginx-certificates:
